% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{utils}
\alias{utils}
\alias{vec_wrap}
\alias{vec_unwrap}
\alias{vec_jsonify}
\alias{vec_unjsonify}
\alias{vec_serialize}
\alias{vec_unserialize}
\alias{vec_extract_search_image}
\title{Preprocess Input and Postprocess Output}
\usage{
vec_wrap(values, with = "_")

vec_unwrap(values, with = "_")

vec_jsonify(values)

vec_unjsonify(values)

vec_serialize(values)

vec_unserialize(values)

vec_extract_search_image(values)
}
\arguments{
\item{values}{A vector of values to be processed.}

\item{with}{String. The string to wrap or unwrap the values with (default: "_").}
}
\value{
A vector of processed values.
}
\description{
These utility functions are used to preprocess input to the \code{tres_encrypt()} function and postprocess the output from the \code{tres_decrypt()} function.
}
\details{
\itemize{
\item \code{vec_wrap()} surrounds each value with a character (and \code{vec_unwrap()} reverses that)
\item \code{vec_jsonify()} serializes each value to JSON (and \code{vec_unjsonify()} reverses that)
\item \code{vec_serialize()} serializes each value along with the R object metadata to JSON (and \code{vec_unserialize()} reverses that)
\item \code{vec_extract_search_image()} extracts from each encrypted value the search image
}
}
\examples{
strings <- c("One", "", " ", NA)

vec_wrap(strings)

vec_wrap(strings) |> vec_unwrap()

vec_jsonify(strings)

vec_jsonify(strings) |> vec_unjsonify()

vec_serialize(strings)

vec_serialize(strings) |> vec_unserialize()

numbers <- c(3.1415, 42, 1337)

vec_jsonify(numbers)

vec_serialize(numbers)

datetimes <- c(lubridate::now(), lubridate::now() + lubridate::hours(1))

vec_jsonify(datetimes)

vec_jsonify(datetimes) |> vec_unjsonify()

vec_serialize(datetimes)

vec_serialize(datetimes) |> vec_unserialize()

input <- c(
  "3::f0a2b963-db9e-4f0b-ba61-577a12500450::1:mGs24EZuJbLmd7wpTivPMg==::1:yggT9t/vw2GfU/hAw4IzyUNWv81lm3NRAPdOrM+BZc3Kk3OYpZvjcTJcsI0oGC1z::K1Z+I9Lp86Njwa1jy7eQ7prYCsZz/8+pLR60wfrNVCI=",
  "3::f0a2b963-db9e-4f0b-ba61-577a12500450::1:mGs24EZuJbLmd7wpTivPMg==::::qqIEyAAdYeARM0RWPRNaDFJY7RP0OD/cgoWSiXLW6NA=",
  NA
)

vec_extract_search_image(input)
}
